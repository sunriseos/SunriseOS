initSidebarItems({"constant":[["AVERAGE_SECS_PER_YEAR","The average count of seconds per year."],["DAYS_PER_LYEAR","The count of days in a leap year."],["DAYS_PER_NYEAR","The count of days in a common year."],["DAYS_PER_WEEK","The count of days in a week."],["EPOCH_WEEK_DAY","The week day of the UNIX Epoch."],["EPOCH_YEAR","The year of the UNIX Epoch."],["HOURS_PER_DAY","The count of hours in a day."],["MINS_PER_HOUR","The count of minutes in an hour."],["MONS_PER_YEAR","The count of months in a year."],["MON_LENGTHS","The month lengths definition (index 0 is a common year, index 1 is a leap year)."],["SECS_PER_DAY","The count of seconds in a day."],["SECS_PER_HOUR","The count of seconds in an hour."],["SECS_PER_MIN","The count of seconds in a minute."],["SECS_PER_REPEAT","The number of seconds before a reset of leap years."],["TIME_T_MAX","The max value of the Time type."],["TIME_T_MIN","The min value of the Time type."],["TZ_MAX_CHARS","The max number of chars that can be stored in a TimeZoneRule."],["TZ_MAX_LEAPS","The max number of leaps definition in TzIf files."],["TZ_MAX_TIMES","The max number of time transitions that can be stored in a TimeZoneRule."],["TZ_MAX_TYPES","The max number of type time infos that can be stored in a TimeZoneRule."],["TZ_NAME_MAX","The max size of a POSIX TimeZone name."],["YEARS_PER_REPEAT","The number of year before a reset of leap years."],["YEAR_BASE","The year base of the EPOCH_YEAR."],["YEAR_LENGTHS","The year lengths definition (index 0 is a common year, index 1 is a leap year)."]],"enum":[["TimeZoneError","Represent a time zone error."]],"fn":[["create_calendar_time","Create a CalendarTime from a timestamp and a GMT offset."]],"mod":[["conversion","Conversion module"],["misc","Misc utils"],["utils","Utils used for local time managment."]],"struct":[["CalendarAdditionalInfo","Represent the aditional information attached to a local time."],["CalendarTime","Represent a local time."],["CalendarTimeInfo","Represent the basic informations of a local time."],["TimeTypeInfo","Represent a TimeZone type info."],["TimeZoneRule","Represent the rules defining a TimeZone."]],"type":[["PosixTime","The type used to express time at the API level."],["Time","The type used to express time internally."],["TimeZoneResult","The Result of a time conversion."]]});